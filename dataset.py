import cv2
import time
import torch
from ultralytics import YOLO
import os

# üìå URL –ø–æ—Ç–æ–∫–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π)
stream_url = "http://46.191.199.9/1660720512DSH176/tracks-v1/index.fmp4.m3u8?token=0787772081c54d76b3283638320c30b3"

# üìå –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ GPU
device = "cuda" if torch.cuda.is_available() else "cpu"
print(f"üîπ –ò—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {device.upper()}")

# üìå –ó–∞–≥—Ä—É–∂–∞–µ–º YOLO (—Å –º–æ–¥–µ–ª—å—é 12x)
model = YOLO("yolo12x.pt").to(device)

# üìå –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ç–æ–∫
cap = cv2.VideoCapture(stream_url)
if not cap.isOpened():
    print("‚ùå –û—à–∏–±–∫–∞: OpenCV –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—Ç–æ–∫!")
    exit()

# üìå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
output_images = "training_data/images/"
output_labels = "training_data/labels/"
os.makedirs(output_images, exist_ok=True)
os.makedirs(output_labels, exist_ok=True)

frame_interval = 1  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ - 1 –∫–∞–¥—Ä –≤ —Å–µ–∫—É–Ω–¥—É
last_saved_time = 0  # –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –∫–∞–¥—Ä–∞

while cap.isOpened():
    ret, frame = cap.read()
    if not ret or frame is None:
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞–¥—Ä.")
        break

    # üìå –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    current_time = time.time()

    # üìå YOLO –¥–µ–ª–∞–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
    results = model(frame)

    # üìå –§–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    timestamp = int(current_time)
    image_filename = f"{output_images}{timestamp}.jpg"
    label_filename = f"{output_labels}{timestamp}.txt"

    # üìå –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è —Ä–∞–∑–º–µ—Ç–∫–∏
    with open(label_filename, "w") as label_file:
        for box in results[0].boxes:
            cls = int(box.cls[0])  # –ö–ª–∞—Å—Å –æ–±—ä–µ–∫—Ç–∞
            conf = float(box.conf[0])  # –î–æ–≤–µ—Ä–∏–µ –º–æ–¥–µ–ª–∏
            x_center, y_center, width, height = box.xywhn[0]  # –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã YOLO

            # üìå –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ .txt —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ YOLO (class x_center y_center width height)
            label_file.write(f"{cls} {x_center} {y_center} {width} {height}\n")

    # üìå –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    if current_time - last_saved_time >= frame_interval:
        cv2.imwrite(image_filename, frame)
        print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {image_filename} –∏ {label_filename}")

        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –∫–∞–¥—Ä–∞
        last_saved_time = current_time

    # üìå –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –∫–∞–¥—Ä
    cv2.imshow("YOLO Stream (GPU)", frame)

    # üìå –í—ã—Ö–æ–¥ –ø–æ "q"
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
