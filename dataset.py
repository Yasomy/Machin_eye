import cv2
import time
import torch
import os
from ultralytics import YOLO

# URL –ø–æ—Ç–æ–∫–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π `m3u8`, –µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è)
stream_url = "http://46.191.199.9/1660720512DSH176/tracks-v1/index.fmp4.m3u8?token=3e32d84f2f7a4650a7bf9a54c9745605"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ GPU
device = "cuda" if torch.cuda.is_available() else "cpu"
print(f"üîπ –ò—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {device.upper()}")

# –ó–∞–≥—Ä—É–∂–∞–µ–º YOLO –Ω–∞ GPU (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
model = YOLO("yolo11n.pt").to(device)

# –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ç–æ–∫
cap = cv2.VideoCapture(stream_url)

if not cap.isOpened():
    print("‚ùå –û—à–∏–±–∫–∞: OpenCV –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—Ç–æ–∫!")
    exit()

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
output_dir = "dataset_screenshots"
os.makedirs(output_dir, exist_ok=True)

prev_time = 0  # –í—Ä–µ–º—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è FPS
frame_count = 0  # –°—á–µ—Ç—á–∏–∫ –∫–∞–¥—Ä–æ–≤

while cap.isOpened():
    ret, frame = cap.read()
    if not ret or frame is None:
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞–¥—Ä.")
        break

    frame_count += 1

    # YOLO –¥–µ–ª–∞–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ GPU
    results = model(frame)

    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–ª–∞—Å—Å–æ–≤ (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ "Person" –∏ "Car")
    person_count = 0
    transport_count = 0

    for box in results[0].boxes:
        cls = int(box.cls[0])
        x1, y1, x2, y2 = map(int, box.xyxy[0])  # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –±–æ–∫—Å–∞
        conf = box.conf[0]  # –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å

        if cls == 0:  # –ß–µ–ª–æ–≤–µ–∫
            person_count += 1
            color = (0, 255, 0)  # –ó–µ–ª–µ–Ω—ã–π
            label = f"Person {conf:.2f}"
        elif cls == 2:  # –ú–∞—à–∏–Ω–∞
            transport_count += 1
            color = (255, 0, 0)  # –°–∏–Ω–∏–π
            label = f"Car {conf:.2f}"
        else:
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã

        # –†–∏—Å—É–µ–º –±–æ–∫—Å –∏ –ø–æ–¥–ø–∏—Å—å
        cv2.rectangle(frame, (x1, y1), (x2, y2), color, 2)
        cv2.putText(frame, label, (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, color, 2)

    # –ï—Å–ª–∏ –Ω–∞ –∫–∞–¥—Ä–µ –µ—Å—Ç—å –ª—é–¥–∏ –∏–ª–∏ –º–∞—à–∏–Ω—ã, –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
    if person_count > 0 or transport_count > 0:
        screenshot_path = os.path.join(output_dir, f"frame_{frame_count:06d}.jpg")
        cv2.imwrite(screenshot_path, frame)
        print(f"üì∏ –°–æ—Ö—Ä–∞–Ω–µ–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç: {screenshot_path}")

    # –í—ã—á–∏—Å–ª—è–µ–º FPS
    curr_time = time.time()
    fps = 1 / (curr_time - prev_time) if prev_time else 0
    prev_time = curr_time

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    cv2.putText(frame, f"FPS: {int(fps)}", (20, 40), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)
    cv2.putText(frame, f"People: {person_count}", (20, 80), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 255), 2)
    cv2.putText(frame, f"Transport: {transport_count}", (20, 120), cv2.FONT_HERSHEY_SIMPLEX, 1, (255, 0, 255), 2)

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –∫–∞–¥—Ä
    cv2.imshow("YOLO Stream (GPU)", frame)

    # –í—ã—Ö–æ–¥ –ø–æ "q"
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
