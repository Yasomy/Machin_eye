import cv2
import time
import torch
from ultralytics import YOLO
import os

# üìå URL –ø–æ—Ç–æ–∫–∞
stream_url = "http://46.191.199.17/1557318547RKB341/index.fmp4.m3u8?token=0cc12cd37d3a44129932b9d201928fdf"

# üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ GPU
device = "cuda" if torch.cuda.is_available() else "cpu"
print(f"üîπ –ò—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {device.upper()}")

# üìå –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ YOLO
model = YOLO("best_x3.pt").to(device)

# üìå –û—Ç–∫—Ä—ã—Ç–∏–µ –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫–∞
cap = cv2.VideoCapture(stream_url)
if not cap.isOpened():
    print("‚ùå –û—à–∏–±–∫–∞: OpenCV –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—Ç–æ–∫!")
    exit()

# üìå –ü–∞–ø–∫–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
output_images = "training_data/images10/"
output_labels = "training_data/labels10/"
os.makedirs(output_images, exist_ok=True)
os.makedirs(output_labels, exist_ok=True)

# ‚öô –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
frame_interval = 5             # –°–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –∫–∞–¥—Ä–∞–º–∏
max_frames = 100               # –ú–∞–∫—Å–∏–º—É–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∫–∞–¥—Ä–æ–≤
saved_frame_count = 0          # –°—á—ë—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∫–∞–¥—Ä–æ–≤
last_saved_time = 0            # –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è

while cap.isOpened() and saved_frame_count < max_frames:
    ret, frame = cap.read()
    if not ret or frame is None:
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞–¥—Ä.")
        break

    current_time = time.time()

    if current_time - last_saved_time >= frame_interval:
        results = model(frame)
        timestamp = int(current_time)
        image_filename = f"{output_images}{timestamp}.jpg"
        label_filename = f"{output_labels}{timestamp}.txt"

        with open(label_filename, "w") as label_file:
            for box in results[0].boxes:
                cls = int(box.cls[0])
                x_center, y_center, width, height = box.xywhn[0]
                label_file.write(f"{cls} {x_center} {y_center} {width} {height}\n")

        cv2.imwrite(image_filename, frame)
        print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {image_filename} –∏ {label_filename}")
        last_saved_time = current_time
        saved_frame_count += 1

    cv2.imshow("YOLO Stream (GPU)", frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
